export default async function initBudgetAllocationPage() {}
import { html } from "lit-html";

const container = document.getElementById("data-container") as HTMLElement;

async function initBudgetAllocationDOM() {
  try {
    const budgetAllocations = await getAllBudgetAllocation();
    const budgetAllocationDOM = `
      <table border="1" cellspacing="0">
        <thead>
          <tr>
            <th style="width=">Category</th>
            <th class="" style="width: 20%">Amount (â‚±)</th>
            <th style="width=">Description / Details</th>
          </tr>
        </thead>
        <tbody>
          ${budgetAllocations
            .map((alloc) => {
              return `
          <tr>
            <td>${alloc.category}</td>
            <td>${alloc.amount}</td>
            <td>${alloc.items}</td>
          </tr>

          `;
            })
            .join("")}
        </tbody>
      </table>
    `;
    // const budgetAllocationDOM = budgetAllocations.map(
    //   (alloc: BudgetAllocation) => {},
    // );

    container.innerHTML = budgetAllocationDOM;
  } catch (e) {
    console.error(e);
  }
}

interface BudgetAllocation {
  category: string;
  amount: number;
  items: string;
}

async function getAllBudgetAllocation(): Promise<BudgetAllocation[]> {
  const res = await fetch("/api/v1/budgetAllocation/", {
    method: "GET",
    credentials: "include",
  });

  if (!res.ok) {
    throw new Error(`HTTP error! status: ${res.status}`);
  }

  return await res.json();
}

async function updateBudgetAllocation(
  id: number,
  category: string,
  amount: number,
  items: string,
) {
  const res = await fetch(`/api/v1/budgetAllocation/${id}`, {
    method: "PUT",
    credentials: "include",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      category,
      amount,
      items,
    }),
  });

  if (!res.ok) {
    throw new Error(`HTTP error! status: ${res.status}`);
  }
}
