@use "../abstracts/variables" as *;
@use "../abstracts/mixins" as *;
@use "sass:color";

%gen-btn {
  cursor: pointer;
  display: inline-block;
  border: 0;
  outline: none;
  // rm  the default 1.5 so that textd inside doesnt create space
  // if btn has text and not icon
  // line-height: normal !important;
  // padding: $base-padding $base-padding;
  // border-radius: $base-border-radius;

  // hover effect is triggered by tap on mobiles
  @include mobile {
    &:hover {
      -webkit-tap-highlight-color: transparent !important;
      background-color: transparent !important;
    }
  }
}

@mixin btn($bg-color: #fff) {
  @extend %gen-btn;
  background-color: $bg-color;
  // color: $color !important;
  color: var(--foreground);
}

// use this for if using var theming approach
// and just customize color and hover color through vars in a
// centralized .scss file (e.g. themes.scss)
// or if using a simple btn that doesnt require theme
.btn {
  @extend %gen-btn;
}

// GENERIC BUTTON COLORS

@each $key, $val in $colors {
  .btn-#{$key} {
    @include btn($val);
    &:hover {
      background-color: color.adjust($val, $lightness: 5%);
    }
  }

  .btn-outlined-#{$key} {
    @include btn(#fff);
    border: $base-border-thickness solid $val;
    &:hover {
      background-color: $val;
    }
  }
}

// CLASS BASED THEMING

// NOTE: temporarily added @ xl will remove/modify again later / on other projs

@each $theme, $values in $themes {
  @each $k, $v in $values {
    // @include xl {
    .btn-#{$theme}-#{$k} {
      @include btn($v);

      &:hover {
        background-color: color.adjust($v, $lightness: 5%);
      }
    }

    .btn-outlined-#{$theme}-#{$k} {
      @include btn(transparent);
      border: $base-border-thickness solid $v !important;

      &:hover {
        background-color: $v !important;

        // @include mobile {
        //   // override browsers weird default hover/bg on mobiles.
        //   -webkit-tap-highlight-color: transparent;
        //   background-color: transparent !important;
        // }
      }
    }

    // TODO: create icon buttons (hover and no hover)

    // just for this project so that the proj not breaks.
    // ill be deprecating this next time
    .btn-no-hover {
      @include btn(transparent);

      @include mobile {
        // override browsers weird default hover/bg on mobiles.
        &:hover {
          -webkit-tap-highlight-color: transparent;
          background-color: transparent !important;
        }
      }
    }

    // .btn-no-hover-outlined-#{$theme}-#{$k} {
    //   @include btn(transparent);
    //   border: $base-border-thickness solid $v !important;
    // }

    @include mobile {
      // override browsers weird default hover/bg on mobiles.
      // cause when using ur finger/s on mobiles, technically you cant hover like you would using a mouse in computers, and if you have a hover pseudo class on an elem (in mobile), when you click on it the hover color becomes the new bg which is not ideal MOST of the time.
      // -webkit-tap-highlight-color: #3295b6;
      // background-color: #3295b6 !important;
    }
    // }
  }
}
